@page
@model ScoreManagement.Pages.AdminMenu.StudentsCoursesManage.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>StudentsCourse</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <!-- Chọn Sinh Viên -->
            <div class="form-group">
                <label asp-for="StudentsCourse.StudentId" class="control-label"></label>
                <select asp-for="StudentsCourse.StudentId" class="form-control" asp-items="ViewBag.StudentId" id="StudentIdDropdown"></select>
            </div>
            <div class="form-group">
                <label for="StudentCode" class="control-label">Student Code</label>
                <input type="text" class="form-control" id="StudentCode" readonly />
            </div>
            <div class="form-group">
                <label for="FullName" class="control-label">Full Name</label>
                <input type="text" class="form-control" id="FullName" readonly />
            </div>

            <!-- Chọn Môn Học -->
            <div class="form-group">
                <label asp-for="StudentsCourse.CourseId" class="control-label"></label>
                <select asp-for="StudentsCourse.CourseId" class="form-control" asp-items="ViewBag.CourseId" id="CourseIdDropdown"></select>
            </div>

            <!-- Chọn Lớp (ban đầu bị vô hiệu hóa) -->
            <div class="form-group">
                <label asp-for="StudentsCourse.ClassId" class="control-label"></label>
                <select asp-for="StudentsCourse.ClassId" class="form-control" id="ClassIdDropdown" disabled></select>
            </div>

            <!-- Chọn Giảng Viên (ban đầu bị vô hiệu hóa) -->
            <div class="form-group">
                <label asp-for="StudentsCourse.LecturerId" class="control-label"></label>
                <select asp-for="StudentsCourse.LecturerId" class="form-control" id="LecturerIdDropdown" disabled></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        document.getElementById("StudentIdDropdown").addEventListener("change", function () {
            const studentId = this.value;
            console.log("Student ID selected:", studentId); // Kiểm tra giá trị ID đã chọn
            if (studentId) {
                fetch(`/AdminMenu/StudentsCoursesManage/Create?handler=StudentInfo&studentId=${studentId}`)
                    .then(response => response.json())
                    .then(data => {
                        console.log("Data received:", data); // Kiểm tra dữ liệu trả về
                        const studentCodeField = document.getElementById("StudentCode");
                        const fullNameField = document.getElementById("FullName");
                        // Gán giá trị
                        studentCodeField.value = data.studentCode || '';
                        fullNameField.value = data.fullName || '';
                    })
                    .catch(error => console.error('Lỗi khi lấy thông tin sinh viên:', error));
            } else {
                document.getElementById("StudentCode").value = '';
                document.getElementById("FullName").value = '';
            }
        });
    </script>
    <script>
        // Khi chọn môn học, lấy danh sách lớp tương ứng
        document.getElementById("CourseIdDropdown").addEventListener("change", function () {
            const courseId = this.value;
            const classDropdown = document.getElementById("ClassIdDropdown");

            if (courseId) {
                fetch(`/AdminMenu/StudentsCoursesManage/Create?handler=GetClassesByCourse&courseId=${courseId}`)
                    .then(response => response.json())
                    .then(data => {
                        classDropdown.innerHTML = ""; // Xóa danh sách cũ
                        classDropdown.disabled = false; // Mở khóa dropdown lớp

                        data.forEach(classItem => {
                            let option = document.createElement("option");
                            option.value = classItem.classId;
                            option.text = classItem.classCode;
                            classDropdown.appendChild(option);
                        });
                    })
                    .catch(error => console.error('Lỗi khi lấy danh sách lớp:', error));
            } else {
                classDropdown.innerHTML = "";
                classDropdown.disabled = true;
            }
        });

        // Khi chọn lớp, lấy giảng viên tương ứng
        document.getElementById("ClassIdDropdown").addEventListener("change", function () {
            const classId = this.value;
            const lecturerDropdown = document.getElementById("LecturerIdDropdown");

            if (classId) {
                fetch(`/AdminMenu/StudentsCoursesManage/Create?handler=GetLecturerByClass&classId=${classId}`)
                    .then(response => response.json())
                    .then(data => {
                        lecturerDropdown.innerHTML = ""; // Xóa danh sách cũ
                        lecturerDropdown.disabled = false; // Mở khóa dropdown giảng viên

                        let option = document.createElement("option");
                        option.value = data.lecturerId;
                        option.text = data.lecturerName;
                        lecturerDropdown.appendChild(option);
                    })
                    .catch(error => console.error('Lỗi khi lấy giảng viên:', error));
            } else {
                lecturerDropdown.innerHTML = "";
                lecturerDropdown.disabled = true;
            }
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
